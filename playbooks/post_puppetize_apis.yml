---
# Post puppetization API node modifications.

- hosts: api
  become: yes
  become_user: root
  vars:
    testuser_openrc: /root/testuser.sh
  tasks:
#    - name: Relax Horizon allowed hosts
#      shell: sed -i "s/^ALLOWED_HOSTS.*/ALLOWED_HOSTS = ['*', ]/" /etc/openstack-dashboard/local_settings
    - name: Change Horizon login backend to ldap
      shell: sed -i "s/'native'/'ldap'/" /etc/openstack-dashboard/local_settings
#workaround: For the time being, don't use vanilla scripts for tenant creation and mapping
    - name: Create non-admin test project
      shell: source /root/openrc.admintoken; openstack project create testgroup --domain Default
      ignore_errors: true
    - name: Grant member role to test project
      shell: source /root/openrc.admintoken; openstack role add --project-domain Default --project testgroup --group testgroup member
      ignore_errors: true
    - name: Grant object role to test project
      shell: source /root/openrc.admintoken; openstack role add --project-domain Default --project testgroup --group testgroup object_store_user
      ignore_errors: true
    - name: Grant admin role to service project
      shell: source /root/openrc.admintoken; openstack role add --project-domain Default --project service --group service admin
      ignore_errors: true
#bonus! create openrc
    - name: Create testuser openrc header
      shell: echo "#!/usr/bin/env bash" > "{{ testuser_openrc }}"
    - name: Add testuser openrc project UUID
      shell: echo "export OS_PROJECT_ID=$(source /root/openrc.admintoken;openstack project show testgroup -f value -c id)" >> "{{ testuser_openrc }}"
    - name: Add remainder of testuser openrc file
      blockinfile:
        dest: "{{ testuser_openrc }}"
        insertafter: EOF
        block: |
          export OS_USER_DOMAIN_NAME="Default"
          export OS_PROJECT_NAME=testgroup
          export OS_USERNAME=testuser
          export OS_PASSWORD="{{vault_testuser_password}}"
          export OS_AUTH_URL=https://api-node0.ext.openstacklocal:5001/v3
          export OS_IDENTITY_API_VERSION=3
          export OS_REGION_NAME="cloud-devel"
          export OS_INTERFACE=public

- name: Install rally into api-node0
  hosts: api-node0
  become: true
  become_user: root
  roles:
    - ansible-role-rally
    - role: ansible-role-rally-scenarios
      clouds:
        testcloud:
          region: cloud-devel
          endpoint: api-node0:5000/v2.0/
          adminuser: rally-admin
          adminpassword: "{{ vault_rally_admin_password }}"
          admin_project_name: rally
          admin_domain_name: service
          admin_project_domain_name: service
          username: rally
          userpassword: "{{ vault_rally_password }}"
          user_project_name: rally
          user_domain_name: service
          user_project_domain_name: service
          network_name: rally_network
          tempest_extra_settings: []
          tempest_skip_tests: {}
          tempest_cirros_download_url: http://mirror.noris.net/cirros/0.3.5/cirros-0.3.5-x86_64-disk.img
