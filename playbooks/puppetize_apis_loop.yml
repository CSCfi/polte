---
# Puppetize API nodes.
- hosts: puppet
  tasks:
    - name: regenerate types for the environments to prevent autoload issues
      command: "/opt/puppetlabs/bin/puppet generate types --environment {{ puppet_environment }}"

- hosts: api
  become: true
  become_user: root
  pre_tasks:
    - name: create partition for tmp disk
      parted:
        device: /dev/vdb
        number: 1
        state: present
    - name: create filesystemp for tmp disk
      filesystem:
        fstype: ext4
        dev: /dev/vdb1
    - name: hax for something ruby something bug something
      shell: chmod o+t /tmp; chmod 1777 /tmp
    - name: Flush firewall rules for bootstrap - Puppetize will reinstate them
      shell: iptables -F
    - name: Link pip-python to pip
      shell: ln -s /usr/bin/pip /usr/bin/pip-python
      args:
        creates: /usr/bin/pip-python
    - name: Add CA to environment
      lineinfile:
        path: /etc/environment
        insertafter: EOF
        line: export OS_CACERT=/etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt
    - name: Add CA to CA bundle
      blockinfile:
        path: /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt
        block: |
          {{ polte_ss_ca_cert }}
    - name: Add CA to CA bundle
      blockinfile:
        path: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        block: |
          {{ polte_ss_ca_cert }}
    - shell: mkdir -p /etc/keystone/ssl
      ignore_errors: True
  roles:
    - { role: ansible-role-puppetize, ansible_fqdn: "{{inventory_hostname_short}}.openstacklocal" }

- hosts: api-node0
  become: true
  become_user: root
  tasks:
    - name: Force cinder-volume
      shell: systemctl start openstack-cinder-volume
